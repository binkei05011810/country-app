{"ast":null,"code":"var _s = $RefreshSig$();\n\n// your custom hook goes here\nimport { useState, useEffect } from \"react\";\n\nfunction useCountry(name) {\n  _s();\n\n  const [country, setCountry] = useState(name);\n  const [error, setError] = useState();\n  useEffect(() => {\n    const url = `https://restcountries.eu/rest/v2/${name ? `name/${name}}` : \"all\"}`;\n    console.log(url);\n    fetch(url).then(res => res.json()).then(res => setCountry(name ? res[0] : res)).catch(err => setError(err));\n  }, [name]);\n  return [error, country];\n}\n\n_s(useCountry, \"bGceDsOYATWnIuf62GREigwJ9Fk=\");\n\nexport default useCountry;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/custom-hooks/useCountry.js"],"names":["useState","useEffect","useCountry","name","country","setCountry","error","setError","url","console","log","fetch","then","res","json","catch","err"],"mappings":";;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACG,IAAD,CAAtC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,GAAG,GAAI,oCAAmCL,IAAI,GAAI,QAAOA,IAAK,GAAhB,GAAqB,KAAM,EAA/E;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAG,IAAAA,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAIR,UAAU,CAACF,IAAI,GAAGU,GAAG,CAAC,CAAD,CAAN,GAAYA,GAAjB,CAF3B,EAGKE,KAHL,CAGWC,GAAG,IAAIT,QAAQ,CAACS,GAAD,CAH1B;AAIH,GAPQ,EAON,CAACb,IAAD,CAPM,CAAT;AASA,SAAO,CAACG,KAAD,EAAQF,OAAR,CAAP;AACH;;GAdQF,U;;AAgBT,eAAeA,UAAf","sourcesContent":["// your custom hook goes here\nimport { useState, useEffect } from \"react\";\n\nfunction useCountry(name) {\n    const [country, setCountry] = useState(name);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        const url = `https://restcountries.eu/rest/v2/${name ? `name/${name}}` : \"all\"}`;\n        console.log(url);\n        fetch(url)\n            .then(res => res.json())\n            .then(res => setCountry(name ? res[0] : res))\n            .catch(err => setError(err))\n    }, [name])\n\n    return [error, country];\n}\n\nexport default useCountry;"]},"metadata":{},"sourceType":"module"}