{"ast":null,"code":"var _s = $RefreshSig$();\n\n// your custom hook goes here\nimport { useState, useEffect } from \"react\";\n\nfunction useCountry(name) {\n  _s();\n\n  const [country, setCountry] = useState([]);\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const url = `https://restcountries.eu/rest/v2/${name ? `name/${name}` : \"all\"}`;\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(res => setCountry(res)).catch(err => setError(err));\n  }, [url]);\n  return [error, name ? country[0] : country.map, setCountry];\n}\n\n_s(useCountry, \"xpJaZRvodZXFIxQof71NhNJLUoM=\");\n\nexport default useCountry;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/custom-hooks/useCountry.js"],"names":["useState","useEffect","useCountry","name","country","setCountry","error","setError","isLoading","setIsLoading","url","fetch","then","res","json","catch","err","map"],"mappings":";;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMU,GAAG,GAAI,oCAAmCP,IAAI,GAAI,QAAOA,IAAK,EAAhB,GAAoB,KAAM,EAA9E;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAIR,UAAU,CAACQ,GAAD,CAF3B,EAGKE,KAHL,CAGWC,GAAG,IAAIT,QAAQ,CAACS,GAAD,CAH1B;AAIH,GALQ,EAKN,CAACN,GAAD,CALM,CAAT;AAOA,SAAO,CAACJ,KAAD,EAAQH,IAAI,GAAGC,OAAO,CAAC,CAAD,CAAV,GAAgBA,OAAO,CAACa,GAApC,EAAyCZ,UAAzC,CAAP;AACH;;GAfQH,U;;AAiBT,eAAeA,UAAf","sourcesContent":["// your custom hook goes here\nimport { useState, useEffect } from \"react\";\n\nfunction useCountry(name) {\n    const [country, setCountry] = useState([]);\n    const [error, setError] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n\n    const url = `https://restcountries.eu/rest/v2/${name ? `name/${name}` : \"all\"}`;\n\n    useEffect(() => {\n        fetch(url)\n            .then(res => res.json())\n            .then(res => setCountry(res))\n            .catch(err => setError(err))\n    }, [url])\n\n    return [error, name ? country[0] : country.map, setCountry];\n}\n\nexport default useCountry;"]},"metadata":{},"sourceType":"module"}