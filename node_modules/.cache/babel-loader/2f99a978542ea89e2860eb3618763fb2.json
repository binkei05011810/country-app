{"ast":null,"code":"var _jsxFileName = \"/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/components/CountryTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination'; //import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useCountry from '../custom-hooks/useCountry';\nimport CountryTableRow from './CountryTableRow';\nimport CountryTableHead from './CountryTableHead';\nimport getComparator from '../helperFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"#1F2D50\",\n    padding: \"50px\"\n  },\n  container: {\n    borderRadius: \"1rem\",\n    override: \"hidden\",\n    backgroundColor: \"#22345A\"\n  },\n  table: {\n    minWidth: 650,\n    backgroundColor: \"#22345A\"\n  }\n}));\n\nfunction CountryTable(props) {\n  _s();\n\n  const [errorCountries, allCountries] = useCountry();\n  const [page, setPage] = useState(0); //Ascending or Descending\n\n  const [order, setOrder] = useState(\"asc\"); //Order by name, population or region\n\n  const [orderBy, setOrderBy] = useState(\"name\"); //const [isLoading, setIsLoading] = useState(false);\n\n  const classes = useStyles();\n  const rowsPerPage = 10;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const sort = () => {\n    if (order === \"asc\") {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(CountryTableHead, {\n          orderBy: orderBy,\n          setOrderBy: setOrderBy,\n          order: order,\n          setOrder: setOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: allCountries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(country => /*#__PURE__*/_jsxDEV(CountryTableRow, {\n            country: country\n          }, country.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: allCountries.length,\n      page: page,\n      onChangePage: handleChangePage,\n      rowsPerPage: rowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryTable, \"ZJmeQqUFcD7xYcw6Xv6DIeonc5g=\", false, function () {\n  return [useCountry, useStyles];\n});\n\n_c = CountryTable;\nexport default CountryTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryTable\");","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/components/CountryTable.js"],"names":["React","useState","makeStyles","Table","TableBody","TableContainer","Paper","TablePagination","useCountry","CountryTableRow","CountryTableHead","getComparator","useStyles","theme","root","backgroundColor","padding","container","borderRadius","override","table","minWidth","CountryTable","props","errorCountries","allCountries","page","setPage","order","setOrder","orderBy","setOrderBy","classes","rowsPerPage","handleChangePage","event","newPage","sort","slice","map","country","name","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\n\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n//import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useCountry from '../custom-hooks/useCountry';\nimport CountryTableRow from './CountryTableRow';\nimport CountryTableHead from './CountryTableHead';\nimport getComparator from '../helperFunctions';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: \"#1F2D50\",\n        padding: \"50px\"\n    },\n\n    container: {\n        borderRadius: \"1rem\",\n        override: \"hidden\",\n        backgroundColor: \"#22345A\",\n    },\n\n    table: {\n        minWidth: 650,\n        backgroundColor: \"#22345A\",\n    }\n}));\n\nfunction CountryTable(props) {\n    const [errorCountries, allCountries] = useCountry();\n    const [page, setPage] = useState(0);\n\n    //Ascending or Descending\n    const [order, setOrder] = useState(\"asc\");\n    //Order by name, population or region\n    const [orderBy, setOrderBy] = useState(\"name\");\n\n    //const [isLoading, setIsLoading] = useState(false);\n    const classes = useStyles();\n    const rowsPerPage = 10;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n\n\n    const sort = () => {\n        if (order === \"asc\") {\n            \n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <TableContainer className={classes.container} component={Paper}>\n                <Table\n                    className={classes.table}\n                    aria-label=\"simple table\">\n\n                    <CountryTableHead\n                        orderBy={orderBy}\n                        setOrderBy={setOrderBy}\n                        order={order}\n                        setOrder={setOrder} />\n\n                    <TableBody>\n                        {allCountries\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((country) => (\n                                <CountryTableRow key={country.name} country={country} />\n                            ))}\n                    </TableBody>\n\n                </Table>\n            </TableContainer>\n\n            <TablePagination\n                component=\"div\"\n                count={allCountries.length}\n                page={page}\n                onChangePage={handleChangePage}\n                rowsPerPage={rowsPerPage}\n            />\n\n        </div >\n    )\n}\n\n\nexport default CountryTable;"]},"metadata":{},"sourceType":"module"}