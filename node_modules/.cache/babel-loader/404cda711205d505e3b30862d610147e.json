{"ast":null,"code":"import { GET_COUNTRY_SUCCESS, LIKE, UNLIKE, SEARCH } from '../actions';\nconst initialState = {\n  favCountries: JSON.parse(window.localStorage.getItem(\"favCountries\")) || [],\n  allCountries: [],\n  searchCountries: [],\n  input: \"\"\n};\n\nconst countryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LIKE:\n      return { ...state,\n        favCountries: newFav\n      };\n\n    case UNLIKE:\n      return { ...state,\n        favCountries: remainingFav\n      };\n\n    case GET_COUNTRY_SUCCESS:\n      const country = action.payload;\n\n      if (country.length === 1) {\n        return { ...state,\n          country: country[0]\n        };\n      } else {\n        return { ...state,\n          allCountries: country,\n          searchCountries: country\n        };\n      }\n\n    case SEARCH:\n      const input = action.payload;\n      const searchResults = state.allCountries.filter(country => country.name.slice(0, input.length).toLowerCase() === input.toLowerCase());\n      console.log(searchResults);\n      return { ...state,\n        searchCountries: searchResults,\n        input: input\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default countryReducer;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/redux/reducers/countryReducer.tsx"],"names":["GET_COUNTRY_SUCCESS","LIKE","UNLIKE","SEARCH","initialState","favCountries","JSON","parse","window","localStorage","getItem","allCountries","searchCountries","input","countryReducer","state","action","type","newFav","remainingFav","country","payload","length","searchResults","filter","name","slice","toLowerCase","console","log"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4CC,MAA5C,QAAsE,YAAtE;AAWA,MAAMC,YAA0B,GAChC;AACIC,EAAAA,YAAY,EAAEC,IAAI,CAACC,KAAL,CAAYC,MAAD,CAAgBC,YAAhB,CAA6BC,OAA7B,CAAqC,cAArC,CAAX,KAAoE,EADtF;AAEIC,EAAAA,YAAY,EAAE,EAFlB;AAGIC,EAAAA,eAAe,EAAE,EAHrB;AAIIC,EAAAA,KAAK,EAAE;AAJX,CADA;;AAQA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAA4D;AAC/E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,IAAL;AACI,aAAO,EAAE,GAAGc,KAAL;AAAYV,QAAAA,YAAY,EAAEa;AAA1B,OAAP;;AAEJ,SAAKhB,MAAL;AACI,aAAO,EAAE,GAAGa,KAAL;AAAYV,QAAAA,YAAY,EAAEc;AAA1B,OAAP;;AAEJ,SAAKnB,mBAAL;AACI,YAAMoB,OAAO,GAAGJ,MAAM,CAACK,OAAvB;;AACA,UAAID,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;AACtB,eAAO,EAAE,GAAGP,KAAL;AAAYK,UAAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAA5B,SAAP;AACH,OAFD,MAEO;AACH,eAAO,EAAE,GAAGL,KAAL;AAAYJ,UAAAA,YAAY,EAAES,OAA1B;AAAmCR,UAAAA,eAAe,EAAEQ;AAApD,SAAP;AACH;;AAEL,SAAKjB,MAAL;AACI,YAAMU,KAAK,GAAGG,MAAM,CAACK,OAArB;AACA,YAAME,aAAa,GAAGR,KAAK,CAACJ,YAAN,CAAmBa,MAAnB,CAA0BJ,OAAO,IAAIA,OAAO,CAACK,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBb,KAAK,CAACS,MAA5B,EAAoCK,WAApC,OAAsDd,KAAK,CAACc,WAAN,EAA3F,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACA,aAAO,EAAE,GAAGR,KAAL;AAAYH,QAAAA,eAAe,EAAEW,aAA7B;AAA4CV,QAAAA,KAAK,EAAEA;AAAnD,OAAP;;AACJ;AACI,aAAOE,KAAP;AArBR;AAuBH,CAxBD;;AA0BA,eAAeD,cAAf","sourcesContent":["import { GET_COUNTRY_SUCCESS, LIKE, UNLIKE, SEARCH, AllActions } from '../actions';\nimport { Country } from '../../types/types';\n\ntype CountryState = {\n    favCountries: Country[];\n    allCountries: Country[];\n    searchCountries: Country[]\n    country?: Country;\n    input: string\n}\n\nconst initialState: CountryState =\n{\n    favCountries: JSON.parse((window as any).localStorage.getItem(\"favCountries\")) || [],\n    allCountries: [],\n    searchCountries: [],\n    input: \"\"\n};\n\nconst countryReducer = (state = initialState, action: AllActions): CountryState => {\n    switch (action.type) {\n        case LIKE:\n            return { ...state, favCountries: newFav };\n\n        case UNLIKE:\n            return { ...state, favCountries: remainingFav };\n\n        case GET_COUNTRY_SUCCESS:\n            const country = action.payload;\n            if (country.length === 1) {\n                return { ...state, country: country[0] };\n            } else {\n                return { ...state, allCountries: country, searchCountries: country };\n            }\n\n        case SEARCH:\n            const input = action.payload;\n            const searchResults = state.allCountries.filter(country => country.name.slice(0, input.length).toLowerCase() === input.toLowerCase());\n            console.log(searchResults);\n            return { ...state, searchCountries: searchResults, input: input }\n        default:\n            return state;\n    }\n}\n\nexport default countryReducer;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}