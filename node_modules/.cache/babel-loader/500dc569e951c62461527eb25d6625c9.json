{"ast":null,"code":"var _s = $RefreshSig$();\n\n// your custom hook goes here\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { getCountrySaga } from '../redux/actions';\n\nfunction useCountry(name) {\n  _s();\n\n  var _location$state;\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const input = (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.searchInput) || \"\";\n  let allCountries = useSelector(store => store.countryReducer.searchCountries);\n  let country = useSelector(store => store.countryReducer.country);\n  useEffect(() => {\n    dispatch(getCountrySaga(input, name));\n  }, [dispatch, name, input]);\n  return name ? country : allCountries;\n}\n\n_s(useCountry, \"co3nWlHwXKCWcf8r8TrSm3PbuEs=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useSelector];\n});\n\nexport default useCountry;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/custom-hooks/useCountry.tsx"],"names":["useEffect","useDispatch","useSelector","useLocation","getCountrySaga","useCountry","name","dispatch","location","input","state","searchInput","allCountries","store","countryReducer","searchCountries","country"],"mappings":";;AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,cAAT,QAA+B,kBAA/B;;AAIA,SAASC,UAAT,CAAoBC,IAApB,EAAoE;AAAA;;AAAA;;AAChE,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAG,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEE,KAAV,oEAAiBC,WAAjB,KAAgC,EAA9C;AAEA,MAAIC,YAAY,GAAGV,WAAW,CAAEW,KAAD,IAAkBA,KAAK,CAACC,cAAN,CAAqBC,eAAxC,CAA9B;AACA,MAAIC,OAAO,GAAGd,WAAW,CAAEW,KAAD,IAAkBA,KAAK,CAACC,cAAN,CAAqBE,OAAxC,CAAzB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACH,cAAc,CAACK,KAAD,EAAQH,IAAR,CAAf,CAAR;AACH,GAFQ,EAEN,CAACC,QAAD,EAAWD,IAAX,EAAiBG,KAAjB,CAFM,CAAT;AAIA,SAAOH,IAAI,GAAGU,OAAH,GAAaJ,YAAxB;AACH;;GAbQP,U;UACYJ,W,EACAE,W,EAGED,W,EACLA,W;;;AASlB,eAAeG,UAAf","sourcesContent":["// your custom hook goes here\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { getCountrySaga } from '../redux/actions';\nimport { Country, LocationState } from '../types/types';\nimport { Store } from '../redux/store';\n\nfunction useCountry(name?: string): Country | Country[] | undefined {\n    const dispatch = useDispatch();\n    const location = useLocation<LocationState>();\n    const input = location?.state?.searchInput || \"\";\n\n    let allCountries = useSelector((store: Store) => store.countryReducer.searchCountries);\n    let country = useSelector((store: Store) => store.countryReducer.country);\n\n    useEffect(() => {\n        dispatch(getCountrySaga(input, name));\n    }, [dispatch, name, input])\n\n    return name ? country : allCountries;\n}\n\nexport default useCountry;"]},"metadata":{},"sourceType":"module"}