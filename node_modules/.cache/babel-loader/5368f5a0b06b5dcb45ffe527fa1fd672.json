{"ast":null,"code":"var _jsxFileName = \"/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/components/table/CountryTableHead.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { ThemeContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headCells = [{\n  id: 'flag',\n  numeric: false,\n  isSortable: false,\n  label: 'Flag'\n}, {\n  id: 'name',\n  numeric: false,\n  isSortable: true,\n  label: 'Name'\n}, {\n  id: 'population',\n  numeric: true,\n  isSortable: true,\n  label: 'Population'\n}, {\n  id: 'region',\n  numeric: false,\n  isSortable: true,\n  label: 'Region'\n}, {\n  id: 'languages',\n  numeric: false,\n  isSortable: false,\n  label: 'Languages'\n}];\nconst useStyles = makeStyles({\n  cell: {\n    borderBottom: theme => theme.palette.cellBorder,\n    color: theme => theme.palette.text,\n    fontFamily: \"Raleway, sans-serif\",\n    fontWeight: 600,\n    width: \"5rem\"\n  },\n  arrow: {\n    color: theme => theme.palette.text\n  }\n});\n\nfunction CountryTableHead({\n  order,\n  setOrder,\n  orderBy,\n  setOrderBy,\n  sort\n}) {\n  _s();\n\n  const {\n    currentTheme\n  } = useContext(ThemeContext);\n  const classes = useStyles(currentTheme);\n  useCallback(id => {\n    const action = async () => {\n      if (orderBy !== id) {\n        await setOrderBy(id);\n      } else {\n        await setOrder(order === \"asc\" ? \"desc\" : \"asc\");\n      }\n\n      sort();\n    };\n\n    return () => action();\n  }, [input]);\n\n  const sortAction = () => {};\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [headCells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.cell,\n        align: \"center\",\n        sortDirection: orderBy === cell.id ? order : false,\n        children: [!cell.isSortable && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: cell.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), cell.isSortable && /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          className: classes.arrow,\n          active: orderBy === cell.id,\n          direction: orderBy === cell.id ? order : 'asc',\n          onClick: sortAction(cell.id),\n          children: cell.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this)]\n      }, cell.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n        className: classes.cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryTableHead, \"zeySMz8INBST0J3Zc9VNAH5/bwM=\", false, function () {\n  return [useStyles];\n});\n\n_c = CountryTableHead;\nexport default CountryTableHead;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryTableHead\");","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/components/table/CountryTableHead.tsx"],"names":["useContext","useCallback","makeStyles","TableSortLabel","TableHead","TableRow","TableCell","ThemeContext","headCells","id","numeric","isSortable","label","useStyles","cell","borderBottom","theme","palette","cellBorder","color","text","fontFamily","fontWeight","width","arrow","CountryTableHead","order","setOrder","orderBy","setOrderBy","sort","currentTheme","classes","action","input","sortAction","map"],"mappings":"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","sourcesContent":["import { useContext, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport { ThemeContext } from '../../App';\nimport { Theme } from '../../types/types';\n\ntype Cell = {\n    id: \"flag\" | \"name\" | \"population\" | \"region\" | \"languages\";\n    numeric: boolean;\n    isSortable: boolean;\n    label: \"Flag\" | \"Name\" | \"Population\" | \"Region\" | \"Languages\";\n}\nconst headCells: Cell[] = [\n    { id: 'flag', numeric: false, isSortable: false, label: 'Flag' },\n    { id: 'name', numeric: false, isSortable: true, label: 'Name' },\n    { id: 'population', numeric: true, isSortable: true, label: 'Population' },\n    { id: 'region', numeric: false, isSortable: true, label: 'Region' },\n    { id: 'languages', numeric: false, isSortable: false, label: 'Languages' }\n];\n\nconst useStyles = makeStyles({\n    cell: {\n        borderBottom: (theme: Theme) => theme.palette.cellBorder,\n        color: (theme: Theme) => theme.palette.text,\n        fontFamily: \"Raleway, sans-serif\",\n        fontWeight: 600,\n        width: \"5rem\"\n    },\n    arrow: {\n        color: (theme: Theme) => theme.palette.text,\n    }\n});\n\ntype PropsType = {\n    order: \"desc\" | \"asc\"\n    setOrder: React.Dispatch<React.SetStateAction<\"desc\" | \"asc\">>\n    orderBy: \"name\" | \"population\" | \"region\"\n    setOrderBy: React.Dispatch<React.SetStateAction<\"name\" | \"population\" | \"region\">>\n    sort: () => void\n};\n\nfunction CountryTableHead({ order, setOrder, orderBy, setOrderBy, sort }: PropsType) {\n    const { currentTheme } = useContext(ThemeContext);\n    const classes = useStyles(currentTheme);\n\n    useCallback(\n        (id: \"name\" | \"population\" | \"region\") => {\n            const action = async () => {\n                if (orderBy !== id) {\n                    await setOrderBy(id);\n                } else {\n                    await setOrder(order === \"asc\" ? \"desc\" : \"asc\");\n                }\n                sort();\n            }\n            return () => action();\n        },\n        [input],\n    )\n    const sortAction = () => {\n        \n    }\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((cell: Cell) => (\n                    <TableCell\n                        className={classes.cell}\n                        key={cell.id}\n                        align=\"center\"\n                        sortDirection={orderBy === cell.id ? order : false}>\n                        {!cell.isSortable &&\n                            <span>{cell.label}</span>}\n                        {\n                            cell.isSortable &&\n                            <TableSortLabel\n                                className={classes.arrow}\n                                active={orderBy === cell.id}\n                                direction={orderBy === cell.id ? order : 'asc'}\n                                onClick={sortAction(cell.id as \"name\" | \"population\" | \"region\")}>\n                                {cell.label}\n                            </TableSortLabel>\n                        }\n                    </TableCell>\n                ))}\n                <TableCell className={classes.cell}></TableCell>\n            </TableRow>\n        </TableHead >\n    )\n}\n\nexport default CountryTableHead;"]},"metadata":{},"sourceType":"module"}