{"ast":null,"code":"import { GET_COUNTRY_SUCCESS, REACT_COUNTRY_SUCCESS\n/*,SEARCH_COUNTRY_SUCCESS */\n} from '../actions';\nconst initialState = {\n  favCountries: [],\n  allCountries: [],\n  searchCountries: [],\n  input: \"\"\n};\n\nconst countryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REACT_COUNTRY_SUCCESS:\n      const newFav = action.payload;\n      return { ...state,\n        favCountries: newFav\n      };\n\n    case GET_COUNTRY_SUCCESS:\n      const {\n        searchCountries,\n        country\n      } = action.payload;\n\n      if (country && country.length === 1) {\n        return { ...state,\n          country: country[0]\n        };\n      } else {\n        if (searchCountries) {\n          return { ...state,\n            allCountries: country,\n            searchCountries: searchCountries\n          };\n        }\n\n        return { ...state,\n          allCountries: country,\n          searchCountries: country\n        };\n      }\n\n    /*case SEARCH_COUNTRY_SUCCESS:\n        const { input, countries } = action.payload;\n        return { ...state, searchCountries: countries, input: input }*/\n\n    default:\n      return state;\n  }\n};\n\nexport default countryReducer;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/redux/reducers/countryReducer.tsx"],"names":["GET_COUNTRY_SUCCESS","REACT_COUNTRY_SUCCESS","initialState","favCountries","allCountries","searchCountries","input","countryReducer","state","action","type","newFav","payload","country","length"],"mappings":"AAAA,SAASA,mBAAT,EAA0CC;AAAsB;AAAhE,OAAoG,YAApG;AAWA,MAAMC,YAA0B,GAChC;AACIC,EAAAA,YAAY,EAAE,EADlB;AAEIC,EAAAA,YAAY,EAAE,EAFlB;AAGIC,EAAAA,eAAe,EAAE,EAHrB;AAIIC,EAAAA,KAAK,EAAE;AAJX,CADA;;AAQA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAA4D;AAC/E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,qBAAL;AACI,YAAMU,MAAM,GAAGF,MAAM,CAACG,OAAtB;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYL,QAAAA,YAAY,EAAEQ;AAA1B,OAAP;;AAGJ,SAAKX,mBAAL;AACI,YAAM;AAAEK,QAAAA,eAAF;AAAmBQ,QAAAA;AAAnB,UAA+BJ,MAAM,CAACG,OAA5C;;AACA,UAAIC,OAAO,IAAIA,OAAO,CAACC,MAAR,KAAmB,CAAlC,EAAqC;AACjC,eAAO,EAAE,GAAGN,KAAL;AAAYK,UAAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAA5B,SAAP;AACH,OAFD,MAEO;AACH,YAAIR,eAAJ,EAAqB;AACjB,iBAAO,EAAE,GAAGG,KAAL;AAAYJ,YAAAA,YAAY,EAAES,OAA1B;AAAmCR,YAAAA,eAAe,EAAEA;AAApD,WAAP;AACH;;AACD,eAAO,EAAE,GAAGG,KAAL;AAAYJ,UAAAA,YAAY,EAAES,OAA1B;AAAmCR,UAAAA,eAAe,EAAEQ;AAApD,SAAP;AACH;;AAEL;AACR;AACA;;AACQ;AACI,aAAOL,KAAP;AArBR;AAuBH,CAxBD;;AA0BA,eAAeD,cAAf","sourcesContent":["import { GET_COUNTRY_SUCCESS, AllActions, REACT_COUNTRY_SUCCESS /*,SEARCH_COUNTRY_SUCCESS */ } from '../actions';\nimport { Country } from '../../types/types';\n\ntype CountryState = {\n    favCountries: Country[];\n    allCountries: Country[];\n    searchCountries: Country[]\n    country?: Country;\n    input: string\n}\n\nconst initialState: CountryState =\n{\n    favCountries: [],\n    allCountries: [],\n    searchCountries: [],\n    input: \"\"\n};\n\nconst countryReducer = (state = initialState, action: AllActions): CountryState => {\n    switch (action.type) {\n        case REACT_COUNTRY_SUCCESS:\n            const newFav = action.payload;\n            return { ...state, favCountries: newFav }\n\n\n        case GET_COUNTRY_SUCCESS:\n            const { searchCountries, country } = action.payload;\n            if (country && country.length === 1) {\n                return { ...state, country: country[0] };\n            } else {\n                if (searchCountries) {\n                    return { ...state, allCountries: country, searchCountries: searchCountries };\n                }\n                return { ...state, allCountries: country, searchCountries: country };\n            }\n\n        /*case SEARCH_COUNTRY_SUCCESS:\n            const { input, countries } = action.payload;\n            return { ...state, searchCountries: countries, input: input }*/\n        default:\n            return state;\n    }\n}\n\nexport default countryReducer;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}