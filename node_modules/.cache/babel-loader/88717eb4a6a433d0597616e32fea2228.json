{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport favCountriesReducer from './reducers/countryReducer';\nimport toggleReducer from './reducers/toggleReducer';\nimport rootSaga from './saga/countrySaga';\nconst rootReducer = combineReducers({\n  countryReducer,\n  toggleReducer\n});\nconst initialState = {\n  favCountriesReducer: {\n    favCountries: [],\n    allCountries: [],\n    country: {}\n  },\n  toggleReducer: {\n    open: false\n  }\n};\n\nconst makeStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default makeStore;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","createSagaMiddleware","favCountriesReducer","toggleReducer","rootSaga","rootReducer","countryReducer","initialState","favCountries","allCountries","country","open","makeStore","sagaMiddleware","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAAEQ,EAAAA,cAAF;AAAkBH,EAAAA;AAAlB,CAAD,CAAnC;AAEA,MAAMI,YAAY,GAAG;AACjBL,EAAAA,mBAAmB,EAAE;AACjBM,IAAAA,YAAY,EAAE,EADG;AAEjBC,IAAAA,YAAY,EAAE,EAFG;AAGjBC,IAAAA,OAAO,EAAE;AAHQ,GADJ;AAMjBP,EAAAA,aAAa,EAAE;AACXQ,IAAAA,IAAI,EAAE;AADK;AANE,CAArB;;AAWA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,cAAc,GAAGZ,oBAAoB,EAA3C;AACA,QAAMa,KAAK,GAAGjB,WAAW,CACrBQ,WADqB,EAErBE,YAFqB,EAGrBP,mBAAmB,CAACD,eAAe,CAACc,cAAD,CAAhB,CAHE,CAAzB;AAMAA,EAAAA,cAAc,CAACE,GAAf,CAAmBX,QAAnB;AAEA,SAAOU,KAAP;AACH,CAXD;;AAaA,eAAeF,SAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga'\n\nimport favCountriesReducer from './reducers/countryReducer';\nimport toggleReducer from './reducers/toggleReducer';\nimport rootSaga from './saga/countrySaga';\n\nconst rootReducer = combineReducers({ countryReducer, toggleReducer });\n\nconst initialState = {\n    favCountriesReducer: {\n        favCountries: [],\n        allCountries: [],\n        country: {}\n    },\n    toggleReducer: {\n        open: false\n    }\n}\n\nconst makeStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        rootReducer,\n        initialState,\n        composeWithDevTools(applyMiddleware(sagaMiddleware))\n    );\n\n    sagaMiddleware.run(rootSaga);\n\n    return store;\n}\n\nexport default makeStore;"]},"metadata":{},"sourceType":"module"}