{"ast":null,"code":"var _jsxFileName = \"/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/components/table/CountryTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useCallback, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport useCountry from '../../custom-hooks/useCountry';\nimport CountryTableRow from './CountryTableRow';\nimport CountryTableHead from './CountryTableHead';\nimport getComparator from '../../helperFunctions';\nimport { useDispatch } from 'react-redux';\nimport { getCountrySuccess } from '../../redux/actions';\nimport Navbar from '../../components/navbar/Navbar'; //Theme related\n\nimport { ThemeContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  content: {\n    backgroundColor: theme => theme.palette.background,\n    padding: \"50px 100px\"\n  },\n  container: {\n    borderRadius: \"1rem\",\n    override: \"hidden\",\n    backgroundColor: theme => theme.palette.table\n  },\n  table: {\n    minWidth: 650,\n    backgroundColor: theme => theme.palette.table\n  },\n  pagination: {\n    color: theme => theme.palette.text\n  },\n  loadingContainer: {\n    textAlign: \"center\",\n    width: \"100%\"\n  },\n  loading: {\n    marginTop: \"5rem\",\n    color: \"#4cc9f0\"\n  }\n});\nconst rowsPerPage = 10;\n\nfunction CountryTable() {\n  _s();\n\n  //Set the theme\n  const {\n    currentTheme\n  } = useContext(ThemeContext);\n  const classes = useStyles(currentTheme);\n  /*==================================================*/\n  //All the states\n\n  const [page, setPage] = useState(0); //Ascending or Descending\n\n  const [order, setOrder] = useState(\"asc\"); //Order by name, population or region\n\n  const [orderBy, setOrderBy] = useState(\"name\"); //Search input state\n\n  const [searchInput, setSearchInput] = useState(\"\");\n  /*==================================================*/\n\n  const allCountries = useCountry();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation(); //Create query, icluding info abt page and search input to put in the url\n\n  const query = {\n    page,\n    searchInput\n  };\n  const handleChangePage = useCallback((event, newPage) => {\n    setPage(newPage);\n  }, []);\n  useEffect(() => {\n    history.push({\n      pathname: '/',\n      state: query\n    });\n  }, [history, query, query.page, query.searchInput]);\n  const sort = useCallback(() => {\n    const sortedCountries = [...allCountries].sort(getComparator(order, orderBy));\n    console.log(sortedCountries);\n    dispatch(getCountrySuccess(sortedCountries));\n  }, [allCountries, order, orderBy, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), allCountries.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.loadingContainer,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        disableShrink: true,\n        className: classes.loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(CountryTableHead, {\n            orderBy: orderBy,\n            setOrderBy: setOrderBy,\n            order: order,\n            setOrder: setOrder,\n            sort: sort\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: allCountries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(country => /*#__PURE__*/_jsxDEV(CountryTableRow, {\n              country: country\n            }, country.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        className: classes.pagination,\n        component: \"div\",\n        count: allCountries.length,\n        page: page,\n        onChangePage: handleChangePage,\n        rowsPerPage: rowsPerPage,\n        rowsPerPageOptions: [5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryTable, \"xyo+ZXOlHiR8NCt4D76K9cfQuPY=\", false, function () {\n  return [useStyles, useCountry, useDispatch, useHistory, useLocation];\n});\n\n_c = CountryTable;\nexport default CountryTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryTable\");","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/components/table/CountryTable.tsx"],"names":["useState","useContext","useCallback","useEffect","useHistory","useLocation","makeStyles","Table","TableBody","TableContainer","CircularProgress","Paper","TablePagination","useCountry","CountryTableRow","CountryTableHead","getComparator","useDispatch","getCountrySuccess","Navbar","ThemeContext","useStyles","content","backgroundColor","theme","palette","background","padding","container","borderRadius","override","table","minWidth","pagination","color","text","loadingContainer","textAlign","width","loading","marginTop","rowsPerPage","CountryTable","currentTheme","classes","page","setPage","order","setOrder","orderBy","setOrderBy","searchInput","setSearchInput","allCountries","dispatch","history","location","query","handleChangePage","event","newPage","push","pathname","state","sort","sortedCountries","console","log","length","slice","map","country","name"],"mappings":"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","sourcesContent":["import { useState, useContext, useCallback, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n\nimport { Country } from '../../types/types';\nimport useCountry from '../../custom-hooks/useCountry';\nimport CountryTableRow from './CountryTableRow';\nimport CountryTableHead from './CountryTableHead';\nimport getComparator from '../../helperFunctions';\nimport { useDispatch } from 'react-redux';\nimport { getCountrySuccess } from '../../redux/actions';\nimport Navbar from '../../components/navbar/Navbar';\n\n//Theme related\nimport { ThemeContext } from '../../App';\nimport { Theme } from '../../types/types';\n\nconst useStyles = makeStyles({\n    content: {\n        backgroundColor: (theme: Theme) => theme.palette.background,\n        padding: \"50px 100px\",\n    },\n    container: {\n        borderRadius: \"1rem\",\n        override: \"hidden\",\n        backgroundColor: (theme: Theme) => theme.palette.table,\n    },\n\n    table: {\n        minWidth: 650,\n        backgroundColor: (theme: Theme) => theme.palette.table,\n    },\n\n    pagination: {\n        color: (theme: Theme) => theme.palette.text,\n    },\n\n    loadingContainer: {\n        textAlign: \"center\",\n        width: \"100%\",\n    },\n\n    loading: {\n        marginTop: \"5rem\",\n        color: \"#4cc9f0\"\n    }\n});\n\nconst rowsPerPage = 10;\n\nfunction CountryTable() {\n    //Set the theme\n    const { currentTheme } = useContext(ThemeContext);\n    const classes = useStyles(currentTheme);\n    /*==================================================*/\n\n    //All the states\n    const [page, setPage] = useState(0);\n    //Ascending or Descending\n    const [order, setOrder] = useState<\"asc\" | \"desc\">(\"asc\");\n    //Order by name, population or region\n    const [orderBy, setOrderBy] = useState<\"name\" | \"population\" | \"region\">(\"name\");\n    //Search input state\n    const [searchInput, setSearchInput] = useState<string>(\"\");\n    /*==================================================*/\n\n    const allCountries = useCountry() as Country[];\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n\n    //Create query, icluding info abt page and search input to put in the url\n    const query = {\n        page,\n        searchInput\n    }\n\n    const handleChangePage = useCallback(\n        (event: unknown, newPage: number) => {\n            setPage(newPage);\n        }, []\n    )\n\n    useEffect(() => {\n        history.push({ pathname: '/', state: query });\n    }, [history, query, query.page, query.searchInput])\n\n    const sort = useCallback(\n        () => {\n            const sortedCountries = [...allCountries].sort(getComparator(order, orderBy));\n            console.log(sortedCountries);\n            dispatch(getCountrySuccess(sortedCountries));\n        },\n        [allCountries, order, orderBy, dispatch],\n    );\n\n    return (\n        <div>\n            <Navbar />\n            {allCountries.length === 0\n                ? <div className={classes.loadingContainer}><CircularProgress disableShrink className={classes.loading} /></div>\n                : <div className={classes.content}>\n                    <TableContainer className={classes.container} component={Paper}>\n                        <Table\n                            className={classes.table}\n                            aria-label=\"simple table\">\n\n                            <CountryTableHead\n                                orderBy={orderBy}\n                                setOrderBy={setOrderBy}\n                                order={order}\n                                setOrder={setOrder}\n                                sort={sort} />\n\n                            <TableBody>\n                                {allCountries\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    .map((country: Country) => (\n                                        <CountryTableRow key={country.name} country={country} />\n                                    ))}\n                            </TableBody>\n\n                        </Table>\n                    </TableContainer>\n\n                    <TablePagination\n                        className={classes.pagination}\n                        component=\"div\"\n                        count={allCountries.length}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        rowsPerPage={rowsPerPage}\n                        rowsPerPageOptions={[5]}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default CountryTable;"]},"metadata":{},"sourceType":"module"}