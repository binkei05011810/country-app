{"ast":null,"code":"// Put effect similar to dispatch in thunk => trigger another action to send data to reducer\nimport { takeEvery, put } from 'redux-saga/effects';\nimport { getCountrySuccess, GET_COUNTRY_SAGA } from '../actions'; // Effects like takeEvery, takeLatest: define when to run the saga (which action type will trigger the saga)\n// Saga have to be triggered. thunk can be called straight away\n\nfunction* getCountry() {\n  yield takeEvery(GET_COUNTRY_SAGA, function* (action) {\n    const {\n      name,\n      setIsLoading\n    } = action.payload;\n    const url = `https://restcountries.eu/rest/v2/${name ? `name/${name}?fullText=true` : \"all\"}`;\n    const response = yield fetch(url);\n    const data = yield response.json();\n    yield put(getCountrySuccess(data));\n  });\n}\n\nexport default getCountry;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/redux/saga/countrySaga.js"],"names":["takeEvery","put","getCountrySuccess","GET_COUNTRY_SAGA","getCountry","action","name","setIsLoading","payload","url","response","fetch","data","json"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,GAApB,QAA+B,oBAA/B;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,YAApD,C,CAEA;AACA;;AACA,UAAUC,UAAV,GAAuB;AACnB,QAAMJ,SAAS,CAACG,gBAAD,EAAmB,WAAWE,MAAX,EAAmB;AACjD,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAyBF,MAAM,CAACG,OAAtC;AACA,UAAMC,GAAG,GAAI,oCAAmCH,IAAI,GAAI,QAAOA,IAAK,gBAAhB,GAAkC,KAAM,EAA5F;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMZ,GAAG,CAACC,iBAAiB,CAACU,IAAD,CAAlB,CAAT;AACH,GANc,CAAf;AAOH;;AAED,eAAeR,UAAf","sourcesContent":["// Put effect similar to dispatch in thunk => trigger another action to send data to reducer\nimport { takeEvery, put } from 'redux-saga/effects';\n\nimport { getCountrySuccess, GET_COUNTRY_SAGA } from '../actions';\n\n// Effects like takeEvery, takeLatest: define when to run the saga (which action type will trigger the saga)\n// Saga have to be triggered. thunk can be called straight away\nfunction* getCountry() {\n    yield takeEvery(GET_COUNTRY_SAGA, function* (action) {\n        const { name, setIsLoading } = action.payload;\n        const url = `https://restcountries.eu/rest/v2/${name ? `name/${name}?fullText=true` : \"all\"}`;\n        const response = yield fetch(url);\n        const data = yield response.json();\n        yield put(getCountrySuccess(data));\n    })\n}\n\nexport default getCountry;"]},"metadata":{},"sourceType":"module"}