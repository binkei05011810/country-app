{"ast":null,"code":"import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport countryReducer from './reducers/countryReducer';\nimport toggleReducer from './reducers/toggleReducer';\nimport rootSaga from './saga/countrySaga';\nconst rootReducer = combineReducers({\n  countryReducer,\n  toggleReducer\n});\nconst initialState = {\n  countryReducer: {\n    favCountries: JSON.parse(window.localStorage.getItem(\"favCountries\")) || [],\n    allCountries: [],\n    country: {},\n    input: \"\",\n    searchCountries: []\n  },\n  toggleReducer: {\n    open: false\n  }\n};\n\nconst makeStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  let composeEnhancers = compose;\n\n  if (process.env.NODE_ENV === 'development') {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        trace: true\n      });\n    }\n  }\n\n  const store = createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(sagaMiddleware)));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default makeStore;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/redux/store.tsx"],"names":["createStore","compose","combineReducers","applyMiddleware","createSagaMiddleware","countryReducer","toggleReducer","rootSaga","rootReducer","initialState","favCountries","JSON","parse","window","localStorage","getItem","allCountries","country","input","searchCountries","open","makeStore","sagaMiddleware","composeEnhancers","process","env","NODE_ENV","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,MAAMC,WAAW,GAAGN,eAAe,CAAC;AAAEG,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAD,CAAnC;AAEA,MAAMG,YAAY,GAAG;AACjBJ,EAAAA,cAAc,EAAE;AACZK,IAAAA,YAAY,EAAEC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,CAAX,KAA2D,EAD7D;AAEZC,IAAAA,YAAY,EAAE,EAFF;AAGZC,IAAAA,OAAO,EAAE,EAHG;AAIZC,IAAAA,KAAK,EAAE,EAJK;AAKZC,IAAAA,eAAe,EAAE;AALL,GADC;AAQjBb,EAAAA,aAAa,EAAE;AACXc,IAAAA,IAAI,EAAE;AADK;AARE,CAArB;;AAaA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,cAAc,GAAGlB,oBAAoB,EAA3C;AACA,MAAImB,gBAAgB,GAAGtB,OAAvB;;AAEA,MAAIuB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,QAAIb,MAAM,CAACc,oCAAX,EAAiD;AAC7CJ,MAAAA,gBAAgB,GAAGV,MAAM,CAACc,oCAAP,CAA4C;AAC3DC,QAAAA,KAAK,EAAE;AADoD,OAA5C,CAAnB;AAGH;AACJ;;AACD,QAAMC,KAAK,GAAG7B,WAAW,CACrBQ,WADqB,EAErBC,YAFqB,EAGrBc,gBAAgB,CAACpB,eAAe,CAACmB,cAAD,CAAhB,CAHK,CAAzB;AAMAA,EAAAA,cAAc,CAACQ,GAAf,CAAmBvB,QAAnB;AAEA,SAAOsB,KAAP;AACH,CApBD;;AAsBA,eAAeR,SAAf","sourcesContent":["import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\n\nimport countryReducer from './reducers/countryReducer';\nimport toggleReducer from './reducers/toggleReducer';\nimport rootSaga from './saga/countrySaga';\n\nconst rootReducer = combineReducers({ countryReducer, toggleReducer });\n\nconst initialState = {\n    countryReducer: {\n        favCountries: JSON.parse(window.localStorage.getItem(\"favCountries\")) || [],\n        allCountries: [],\n        country: {},\n        input: \"\",\n        searchCountries: []\n    },\n    toggleReducer: {\n        open: false\n    },\n}\n\nconst makeStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    let composeEnhancers = compose;\n\n    if (process.env.NODE_ENV === 'development') {\n        if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n            composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                trace: true\n            })\n        }\n    }\n    const store = createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(sagaMiddleware)),\n    );\n\n    sagaMiddleware.run(rootSaga);\n\n    return store;\n}\n\nexport default makeStore;"]},"metadata":{},"sourceType":"module"}