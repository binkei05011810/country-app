{"ast":null,"code":"import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport countryReducer from './reducers/countryReducer';\nimport toggleReducer from './reducers/toggleReducer';\nimport rootSaga from './saga/countrySaga';\nconst rootReducer = combineReducers({\n  countryReducer,\n  toggleReducer\n});\nconst initialState = {\n  countryReducer: {\n    favCountries: JSON.parse(window.localStorage.getItem(\"favCountries\")) || [],\n    allCountries: [],\n    searchCountries: [],\n    country: {\n      name: \"\",\n      topLevelDomain: [],\n      alpha2Code: \"\",\n      alpha3Code: \"\",\n      callingCodes: [],\n      capital: \"\",\n      altSpellings: [],\n      region: \"\",\n      subregion: \"\",\n      population: 0,\n      latlng: [0, 0],\n      demonym: \"\",\n      area: 0,\n      gini: 0,\n      timezones: [],\n      borders: [],\n      nativeName: \"\",\n      numericCode: \"\",\n      currencies: [],\n      languages: [],\n      translations: {\n        de: \"\",\n        es: \"\",\n        fr: \"\",\n        ja: \"\",\n        it: \"\",\n        br: \"\",\n        pt: \"\",\n        nl: \"\",\n        hr: \"\",\n        fa: \"\"\n      },\n      flag: \"\",\n      regionalBlocs: [],\n      cioc: \"\"\n    },\n    input: \"\"\n  },\n  toggleReducer: {\n    open: false\n  }\n};\n\nconst makeStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  let composeEnhancers = compose;\n\n  if (process.env.NODE_ENV === 'development') {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        trace: true\n      });\n    }\n  }\n\n  const store = createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(sagaMiddleware)));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default makeStore;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/redux/store.tsx"],"names":["createStore","compose","combineReducers","applyMiddleware","createSagaMiddleware","countryReducer","toggleReducer","rootSaga","rootReducer","initialState","favCountries","JSON","parse","window","localStorage","getItem","allCountries","searchCountries","country","name","topLevelDomain","alpha2Code","alpha3Code","callingCodes","capital","altSpellings","region","subregion","population","latlng","demonym","area","gini","timezones","borders","nativeName","numericCode","currencies","languages","translations","de","es","fr","ja","it","br","pt","nl","hr","fa","flag","regionalBlocs","cioc","input","open","makeStore","sagaMiddleware","composeEnhancers","process","env","NODE_ENV","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","store","run"],"mappings":"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","sourcesContent":["import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\n\nimport countryReducer from './reducers/countryReducer';\nimport toggleReducer from './reducers/toggleReducer';\nimport rootSaga from './saga/countrySaga';\n\nconst rootReducer = combineReducers({ countryReducer, toggleReducer });\n\nexport type Store = ReturnType<typeof rootReducer>;\n\nconst initialState: Store = {\n    countryReducer: {\n        favCountries: JSON.parse((window as any).localStorage.getItem(\"favCountries\")) || [],\n        allCountries: [],\n        searchCountries: [],\n        country: {\n            name: \"\",\n            topLevelDomain: [],\n            alpha2Code: \"\",\n            alpha3Code: \"\",\n            callingCodes: [],\n            capital: \"\",\n            altSpellings: [],\n            region: \"\",\n            subregion: \"\",\n            population: 0,\n            latlng: [0, 0],\n            demonym: \"\",\n            area: 0,\n            gini: 0,\n            timezones: [],\n            borders: [],\n            nativeName: \"\",\n            numericCode: \"\",\n            currencies: [],\n            languages: [],\n            translations: {\n                de: \"\",\n                es: \"\",\n                fr: \"\",\n                ja: \"\",\n                it: \"\",\n                br: \"\",\n                pt: \"\",\n                nl: \"\",\n                hr: \"\",\n                fa: \"\"\n            },\n            flag: \"\",\n            regionalBlocs: [],\n            cioc: \"\"\n        },\n        input: \"\"\n    },\n    toggleReducer: {\n        open: false\n    },\n}\n\nconst makeStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    let composeEnhancers = compose;\n\n    if (process.env.NODE_ENV === 'development') {\n        if ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n            composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                trace: true\n            })\n        }\n    }\n    const store = createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(sagaMiddleware)),\n    );\n\n    sagaMiddleware.run(rootSaga);\n\n    return store;\n}\n\nexport default makeStore;"]},"metadata":{},"sourceType":"module"}