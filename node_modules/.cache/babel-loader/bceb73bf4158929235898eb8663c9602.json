{"ast":null,"code":"var _jsxFileName = \"/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/components/CountryTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination'; //import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useCountry from '../custom-hooks/useCountry';\nimport CountryTableRow from './CountryTableRow';\nimport CountryTableHead from './CountryTableHead';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"#1F2D50\",\n    padding: \"50px\"\n  },\n  container: {\n    borderRadius: \"1rem\",\n    override: \"hidden\",\n    backgroundColor: \"#22345A\"\n  },\n  table: {\n    minWidth: 650,\n    backgroundColor: \"#22345A\"\n  }\n}));\n\nfunction CountryTable(props) {\n  _s();\n\n  const [errorCountries, allCountries] = useCountry();\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = React.useState('ascending');\n  const [orderBy, setOrderBy] = React.useState(\"\"); //const [isLoading, setIsLoading] = useState(false);\n\n  const classes = useStyles();\n  const rowsPerPage = 10;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(CountryTableHead, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: allCountries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(country => /*#__PURE__*/_jsxDEV(CountryTableRow, {\n            country: country\n          }, country.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: allCountries.length,\n      page: page,\n      onChangePage: handleChangePage,\n      rowsPerPage: rowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryTable, \"8T74+7nf3pVEHDqxeTgNUK5+dlY=\", false, function () {\n  return [useCountry, useStyles];\n});\n\n_c = CountryTable;\nexport default CountryTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryTable\");","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/components/CountryTable.js"],"names":["React","useState","makeStyles","Table","TableBody","TableContainer","Paper","TablePagination","useCountry","CountryTableRow","CountryTableHead","useStyles","theme","root","backgroundColor","padding","container","borderRadius","override","table","minWidth","CountryTable","props","errorCountries","allCountries","page","setPage","order","setOrder","orderBy","setOrderBy","classes","rowsPerPage","handleChangePage","event","newPage","slice","map","country","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,eAAP,MAA4B,mCAA5B,C,CAEA;;AAEA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAE,SADf;AAEFC,IAAAA,OAAO,EAAE;AAFP,GAD+B;AAMrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,YAAY,EAAE,MADP;AAEPC,IAAAA,QAAQ,EAAE,QAFH;AAGPJ,IAAAA,eAAe,EAAE;AAHV,GAN0B;AAYrCK,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,GADP;AAEHN,IAAAA,eAAe,EAAE;AAFd;AAZ8B,CAAZ,CAAD,CAA5B;;AAkBA,SAASO,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAM,CAACC,cAAD,EAAiBC,YAAjB,IAAiChB,UAAU,EAAjD;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB5B,KAAK,CAACC,QAAN,CAAe,WAAf,CAA1B;AACA,QAAM,CAAC4B,OAAD,EAAUC,UAAV,IAAwB9B,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B,CALyB,CAOzB;;AACA,QAAM8B,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAMqB,WAAW,GAAG,EAApB;;AAEA,QAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzCT,IAAAA,OAAO,CAACS,OAAD,CAAP;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAAClB,IAAxB;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEkB,OAAO,CAACf,SAAnC;AAA8C,MAAA,SAAS,EAAEV,KAAzD;AAAA,6BACI,QAAC,KAAD;AACI,QAAA,SAAS,EAAEyB,OAAO,CAACZ,KADvB;AAEI,sBAAW,cAFf;AAAA,gCAII,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAMI,QAAC,SAAD;AAAA,oBACKK,YAAY,CACRY,KADJ,CACUX,IAAI,GAAGO,WADjB,EAC8BP,IAAI,GAAGO,WAAP,GAAqBA,WADnD,EAEIK,GAFJ,CAESC,OAAD,iBACD,QAAC,eAAD;AAAoC,YAAA,OAAO,EAAEA;AAA7C,aAAsBA,OAAO,CAACC,IAA9B;AAAA;AAAA;AAAA;AAAA,kBAHP;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAmBI,QAAC,eAAD;AACI,MAAA,SAAS,EAAC,KADd;AAEI,MAAA,KAAK,EAAEf,YAAY,CAACgB,MAFxB;AAGI,MAAA,IAAI,EAAEf,IAHV;AAII,MAAA,YAAY,EAAEQ,gBAJlB;AAKI,MAAA,WAAW,EAAED;AALjB;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GA7CQX,Y;UACkCb,U,EAOvBG,S;;;KARXU,Y;AAgDT,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\n\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n//import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useCountry from '../custom-hooks/useCountry';\n\nimport CountryTableRow from './CountryTableRow';\n\nimport CountryTableHead from './CountryTableHead';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: \"#1F2D50\",\n        padding: \"50px\"\n    },\n\n    container: {\n        borderRadius: \"1rem\",\n        override: \"hidden\",\n        backgroundColor: \"#22345A\",\n    },\n\n    table: {\n        minWidth: 650,\n        backgroundColor: \"#22345A\",\n    }\n}));\n\nfunction CountryTable(props) {\n    const [errorCountries, allCountries] = useCountry();\n    const [page, setPage] = useState(0);\n\n    const [order, setOrder] = React.useState('ascending');\n    const [orderBy, setOrderBy] = React.useState(\"\");\n\n    //const [isLoading, setIsLoading] = useState(false);\n    const classes = useStyles();\n    const rowsPerPage = 10;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    return (\n        <div className={classes.root}>\n            <TableContainer className={classes.container} component={Paper}>\n                <Table\n                    className={classes.table}\n                    aria-label=\"simple table\">\n\n                    <CountryTableHead />\n\n                    <TableBody>\n                        {allCountries\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((country) => (\n                                <CountryTableRow key={country.name} country={country} />\n                            ))}\n                    </TableBody>\n\n                </Table>\n            </TableContainer>\n\n            <TablePagination\n                component=\"div\"\n                count={allCountries.length}\n                page={page}\n                onChangePage={handleChangePage}\n                rowsPerPage={rowsPerPage}\n            />\n\n        </div >\n    )\n}\n\n\nexport default CountryTable;"]},"metadata":{},"sourceType":"module"}