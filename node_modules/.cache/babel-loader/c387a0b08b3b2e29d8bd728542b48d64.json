{"ast":null,"code":"import { GET_COUNTRY_SUCCESS, REACT_COUNTRY_SUCCESS, SEARCH_COUNTRY_SUCCESS } from '../actions';\nconst initialState = {\n  favCountries: [],\n  allCountries: [],\n  searchCountries: [],\n  input: localStorage.getItem(\"searchInput\") || \"\"\n};\n\nconst countryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REACT_COUNTRY_SUCCESS:\n      const newFav = action.payload;\n      return { ...state,\n        favCountries: newFav\n      };\n\n    case GET_COUNTRY_SUCCESS:\n      const {\n        country,\n        searchCountries\n      } = action.payload;\n\n      if (country.length === 1) {\n        return { ...state,\n          country: country[0]\n        };\n      } else {\n        if (searchCountries) {\n          return { ...state,\n            allCountries: country,\n            searchCountries: searchCountries\n          };\n        }\n\n        return { ...state,\n          allCountries: country,\n          searchCountries: country\n        };\n      }\n\n    case SEARCH_COUNTRY_SUCCESS:\n      const {\n        input,\n        countries\n      } = action.payload;\n      return { ...state,\n        searchCountries: countries,\n        input: input\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default countryReducer;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/redux/reducers/countryReducer.tsx"],"names":["GET_COUNTRY_SUCCESS","REACT_COUNTRY_SUCCESS","SEARCH_COUNTRY_SUCCESS","initialState","favCountries","allCountries","searchCountries","input","localStorage","getItem","countryReducer","state","action","type","newFav","payload","country","length","countries"],"mappings":"AAAA,SAASA,mBAAT,EAA0CC,qBAA1C,EAAiEC,sBAAjE,QAA+F,YAA/F;AAWA,MAAMC,YAA0B,GAChC;AACIC,EAAAA,YAAY,EAAE,EADlB;AAEIC,EAAAA,YAAY,EAAE,EAFlB;AAGIC,EAAAA,eAAe,EAAE,EAHrB;AAIIC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB,KAAuC;AAJlD,CADA;;AAQA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAA4D;AAC/E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,qBAAL;AACI,YAAMa,MAAM,GAAGF,MAAM,CAACG,OAAtB;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYP,QAAAA,YAAY,EAAEU;AAA1B,OAAP;;AAGJ,SAAKd,mBAAL;AACI,YAAM;AAAEgB,QAAAA,OAAF;AAAWV,QAAAA;AAAX,UAA+BM,MAAM,CAACG,OAA5C;;AACA,UAAIC,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;AACtB,eAAO,EAAE,GAAGN,KAAL;AAAYK,UAAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAA5B,SAAP;AACH,OAFD,MAEO;AACH,YAAIV,eAAJ,EAAqB;AACjB,iBAAO,EAAE,GAAGK,KAAL;AAAYN,YAAAA,YAAY,EAAEW,OAA1B;AAAmCV,YAAAA,eAAe,EAAEA;AAApD,WAAP;AACH;;AACD,eAAO,EAAE,GAAGK,KAAL;AAAYN,UAAAA,YAAY,EAAEW,OAA1B;AAAmCV,UAAAA,eAAe,EAAEU;AAApD,SAAP;AACH;;AAEL,SAAKd,sBAAL;AACI,YAAM;AAAEK,QAAAA,KAAF;AAASW,QAAAA;AAAT,UAAuBN,MAAM,CAACG,OAApC;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYL,QAAAA,eAAe,EAAEY,SAA7B;AAAwCX,QAAAA,KAAK,EAAEA;AAA/C,OAAP;;AACJ;AACI,aAAOI,KAAP;AArBR;AAuBH,CAxBD;;AA0BA,eAAeD,cAAf","sourcesContent":["import { GET_COUNTRY_SUCCESS, AllActions, REACT_COUNTRY_SUCCESS, SEARCH_COUNTRY_SUCCESS } from '../actions';\nimport { Country } from '../../types/types';\n\ntype CountryState = {\n    favCountries: Country[];\n    allCountries: Country[];\n    searchCountries: Country[]\n    country?: Country;\n    input: string\n}\n\nconst initialState: CountryState =\n{\n    favCountries: [],\n    allCountries: [],\n    searchCountries: [],\n    input: localStorage.getItem(\"searchInput\") || \"\"\n};\n\nconst countryReducer = (state = initialState, action: AllActions): CountryState => {\n    switch (action.type) {\n        case REACT_COUNTRY_SUCCESS:\n            const newFav = action.payload;\n            return { ...state, favCountries: newFav }\n\n\n        case GET_COUNTRY_SUCCESS:\n            const { country, searchCountries } = action.payload;\n            if (country.length === 1) {\n                return { ...state, country: country[0] };\n            } else {\n                if (searchCountries) {\n                    return { ...state, allCountries: country, searchCountries: searchCountries };\n                }\n                return { ...state, allCountries: country, searchCountries: country };\n            }\n\n        case SEARCH_COUNTRY_SUCCESS:\n            const { input, countries } = action.payload;\n            return { ...state, searchCountries: countries, input: input }\n        default:\n            return state;\n    }\n}\n\nexport default countryReducer;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}