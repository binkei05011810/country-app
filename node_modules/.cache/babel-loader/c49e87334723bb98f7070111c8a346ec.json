{"ast":null,"code":"import { GET_COUNTRY_SUCCESS, REACT_COUNTRY_SUCCESS } from '../actions';\nconst initialState = {\n  favCountries: localStorage.getItem(\"favCountries\") ? JSON.parse(localStorage.getItem(\"favCountries\")) : [],\n  allCountries: [],\n  searchCountries: [],\n  input: \"\"\n};\n\nconst countryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REACT_COUNTRY_SUCCESS:\n      const newFav = action.payload;\n      return { ...state,\n        favCountries: newFav\n      };\n\n    case GET_COUNTRY_SUCCESS:\n      const country = action.payload;\n\n      if (country.length === 1) {\n        return { ...state,\n          country: country[0]\n        };\n      } else {\n        return { ...state,\n          allCountries: country,\n          searchCountries: country\n        };\n      }\n\n    case SEARCH_COUNTRY_SUCCESS:\n      const input = action.payload;\n      const searchResults = state.allCountries.filter(country => country.name.slice(0, input.length).toLowerCase() === input.toLowerCase());\n      return { ...state,\n        searchCountries: searchResults,\n        input: input\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default countryReducer;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/redux/reducers/countryReducer.tsx"],"names":["GET_COUNTRY_SUCCESS","REACT_COUNTRY_SUCCESS","initialState","favCountries","localStorage","getItem","JSON","parse","allCountries","searchCountries","input","countryReducer","state","action","type","newFav","payload","country","length","SEARCH_COUNTRY_SUCCESS","searchResults","filter","name","slice","toLowerCase"],"mappings":"AAAA,SAASA,mBAAT,EAAkDC,qBAAlD,QAA+E,YAA/E;AAWA,MAAMC,YAA0B,GAChC;AACIC,EAAAA,YAAY,EAAEC,YAAY,CAACC,OAAb,CAAqB,cAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADQ,GAER,EAHV;AAIIG,EAAAA,YAAY,EAAE,EAJlB;AAKIC,EAAAA,eAAe,EAAE,EALrB;AAMIC,EAAAA,KAAK,EAAE;AANX,CADA;;AAUA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAA4D;AAC/E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,qBAAL;AACI,YAAMc,MAAM,GAAGF,MAAM,CAACG,OAAtB;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYT,QAAAA,YAAY,EAAEY;AAA1B,OAAP;;AAGJ,SAAKf,mBAAL;AACI,YAAMiB,OAAO,GAAGJ,MAAM,CAACG,OAAvB;;AACA,UAAIC,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;AACtB,eAAO,EAAE,GAAGN,KAAL;AAAYK,UAAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAA5B,SAAP;AACH,OAFD,MAEO;AACH,eAAO,EAAE,GAAGL,KAAL;AAAYJ,UAAAA,YAAY,EAAES,OAA1B;AAAmCR,UAAAA,eAAe,EAAEQ;AAApD,SAAP;AACH;;AAEL,SAAKE,sBAAL;AACI,YAAMT,KAAK,GAAGG,MAAM,CAACG,OAArB;AACA,YAAMI,aAAa,GAAGR,KAAK,CAACJ,YAAN,CAAmBa,MAAnB,CAA0BJ,OAAO,IAAIA,OAAO,CAACK,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBb,KAAK,CAACQ,MAA5B,EAAoCM,WAApC,OAAsDd,KAAK,CAACc,WAAN,EAA3F,CAAtB;AAEA,aAAO,EAAE,GAAGZ,KAAL;AAAYH,QAAAA,eAAe,EAAEW,aAA7B;AAA4CV,QAAAA,KAAK,EAAEA;AAAnD,OAAP;;AACJ;AACI,aAAOE,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,eAAeD,cAAf","sourcesContent":["import { GET_COUNTRY_SUCCESS, SEARCH, AllActions, REACT_COUNTRY_SUCCESS } from '../actions';\nimport { Country } from '../../types/types';\n\ntype CountryState = {\n    favCountries: Country[];\n    allCountries: Country[];\n    searchCountries: Country[]\n    country?: Country;\n    input: string\n}\n\nconst initialState: CountryState =\n{\n    favCountries: localStorage.getItem(\"favCountries\")\n        ? JSON.parse(localStorage.getItem(\"favCountries\") as string)\n        : [],\n    allCountries: [],\n    searchCountries: [],\n    input: \"\"\n};\n\nconst countryReducer = (state = initialState, action: AllActions): CountryState => {\n    switch (action.type) {\n        case REACT_COUNTRY_SUCCESS:\n            const newFav = action.payload;\n            return { ...state, favCountries: newFav }\n\n\n        case GET_COUNTRY_SUCCESS:\n            const country = action.payload;\n            if (country.length === 1) {\n                return { ...state, country: country[0] };\n            } else {\n                return { ...state, allCountries: country, searchCountries: country };\n            }\n\n        case SEARCH_COUNTRY_SUCCESS:\n            const input = action.payload;\n            const searchResults = state.allCountries.filter(country => country.name.slice(0, input.length).toLowerCase() === input.toLowerCase());\n\n            return { ...state, searchCountries: searchResults, input: input }\n        default:\n            return state;\n    }\n}\n\nexport default countryReducer;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}