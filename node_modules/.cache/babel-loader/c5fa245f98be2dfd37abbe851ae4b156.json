{"ast":null,"code":"var _jsxFileName = \"/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/components/CountryTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableSortLabel from '@material-ui/core/TableSortLabel'; //import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useCountry from '../custom-hooks/useCountry';\nimport CountryTableRow from './CountryTableRow';\nimport CountryTableCell from './CountryTableCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"#1F2D50\",\n    padding: \"50px\"\n  },\n  container: {\n    borderRadius: \"1rem\",\n    override: \"hidden\",\n    backgroundColor: \"#22345A\"\n  },\n  table: {\n    minWidth: 650,\n    backgroundColor: \"#22345A\"\n  }\n}));\n\nfunction CountryTable(props) {\n  _s();\n\n  const [errorCountries, allCountries] = useCountry();\n  const [page, setPage] = useState(0); //const [isLoading, setIsLoading] = useState(false);\n\n  const classes = useStyles();\n  const rowsPerPage = 10;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          className: classes.header,\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(CountryTableCell, {\n              align: \"center\",\n              children: \"Flag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CountryTableCell, {\n              align: \"center\",\n              children: [\"Name\", /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: true,\n                direction: orderBy === headCell.id ? order : 'asc',\n                onClick: createSortHandler(headCell.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CountryTableCell, {\n              align: \"center\",\n              children: \"Population\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CountryTableCell, {\n              align: \"center\",\n              children: \"Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CountryTableCell, {\n              align: \"center\",\n              children: \"Languages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CountryTableCell, {\n              align: \"center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: allCountries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(country => /*#__PURE__*/_jsxDEV(CountryTableRow, {\n            country: country\n          }, country.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: allCountries.length,\n      page: page,\n      onChangePage: handleChangePage,\n      rowsPerPage: rowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryTable, \"1hhBBD2lJCl7OW+3brQftFzB9LI=\", false, function () {\n  return [useCountry, useStyles];\n});\n\n_c = CountryTable;\nexport default CountryTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryTable\");","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/components/CountryTable.js"],"names":["React","useState","makeStyles","Table","TableBody","TableContainer","TableHead","TableRow","Paper","TablePagination","TableSortLabel","useCountry","CountryTableRow","CountryTableCell","useStyles","theme","root","backgroundColor","padding","container","borderRadius","override","table","minWidth","CountryTable","props","errorCountries","allCountries","page","setPage","classes","rowsPerPage","handleChangePage","event","newPage","header","orderBy","headCell","id","order","createSortHandler","slice","map","country","name","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n//import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useCountry from '../custom-hooks/useCountry';\n\nimport CountryTableRow from './CountryTableRow';\nimport CountryTableCell from './CountryTableCell';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: \"#1F2D50\",\n        padding: \"50px\"\n    },\n\n    container: {\n        borderRadius: \"1rem\",\n        override: \"hidden\",\n        backgroundColor: \"#22345A\",\n    },\n\n    table: {\n        minWidth: 650,\n        backgroundColor: \"#22345A\",\n    }\n}));\n\nfunction CountryTable(props) {\n    const [errorCountries, allCountries] = useCountry();\n    const [page, setPage] = useState(0);\n    //const [isLoading, setIsLoading] = useState(false);\n    const classes = useStyles();\n    const rowsPerPage = 10;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    return (\n        <div className={classes.root}>\n            <TableContainer className={classes.container} component={Paper}>\n                <Table className={classes.table}\n                    aria-label=\"simple table\">\n\n                    <TableHead className={classes.header}>\n                        <TableRow>\n                            <CountryTableCell align=\"center\">Flag</CountryTableCell>\n                            <CountryTableCell align=\"center\">\n                                Name\n                                <TableSortLabel\n                                    active={true}\n                                    direction={orderBy === headCell.id ? order : 'asc'}\n                                    onClick={createSortHandler(headCell.id)}\n                                >\n\n                                </TableSortLabel>\n                            </CountryTableCell>\n                            <CountryTableCell align=\"center\">Population</CountryTableCell>\n                            <CountryTableCell align=\"center\">Region</CountryTableCell>\n                            <CountryTableCell align=\"center\">Languages</CountryTableCell>\n                            <CountryTableCell align=\"center\"></CountryTableCell>\n                        </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                        {allCountries\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((country) => (\n                                <CountryTableRow key={country.name} country={country} />\n                            ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <TablePagination\n                component=\"div\"\n                count={allCountries.length}\n                page={page}\n                onChangePage={handleChangePage}\n                rowsPerPage={rowsPerPage}\n            />\n\n        </div>\n    )\n}\n\n\nexport default CountryTable;"]},"metadata":{},"sourceType":"module"}