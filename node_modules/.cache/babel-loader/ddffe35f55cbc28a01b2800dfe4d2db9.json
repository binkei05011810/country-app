{"ast":null,"code":"var _jsxFileName = \"/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/components/table/CountryTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination'; //import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useCountry from '../../custom-hooks/useCountry';\nimport CountryTableRow from './CountryTableRow';\nimport CountryTableHead from './CountryTableHead';\nimport getComparator from '../../helperFunctions';\nimport { useDispatch } from 'react-redux';\nimport { getCountrySuccess } from '../../redux/actions'; //Theme related\n\nimport { ThemeContext } from '../../App';\nimport { darkTheme, lightTheme } from '../../themes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.pallette.background,\n    padding: \"50px\"\n  },\n  container: {\n    borderRadius: \"1rem\",\n    override: \"hidden\",\n    backgroundColor: theme.table\n  },\n  table: {\n    minWidth: 650,\n    backgroundColor: theme.table\n  }\n}));\n\nfunction CountryTable(props) {\n  _s();\n\n  const {\n    currentTheme,\n    switchTheme\n  } = useContext(ThemeContext);\n  const allCountries = useCountry();\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(0); //Ascending or Descending\n\n  const [order, setOrder] = useState(\"asc\"); //Order by name, population or region\n\n  const [orderBy, setOrderBy] = useState(\"name\");\n  const classes = useStyles();\n  const rowsPerPage = 10;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const sort = () => {\n    const sortedCountries = [...allCountries].sort(getComparator(order, orderBy));\n    dispatch(getCountrySuccess(sortedCountries));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: currentTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(CountryTableHead, {\n            orderBy: orderBy,\n            setOrderBy: setOrderBy,\n            order: order,\n            setOrder: setOrder,\n            sort: sort\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: allCountries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(country => /*#__PURE__*/_jsxDEV(CountryTableRow, {\n              country: country\n            }, country.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        component: \"div\",\n        count: allCountries.length,\n        page: page,\n        onChangePage: handleChangePage,\n        rowsPerPage: rowsPerPage,\n        rowsPerPageOptions: [5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryTable, \"uLOq6VvkdwlPTzFlMzYwC5G3ooo=\", false, function () {\n  return [useCountry, useDispatch, useStyles];\n});\n\n_c = CountryTable;\nexport default CountryTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryTable\");","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react/src/components/table/CountryTable.js"],"names":["React","useState","useContext","makeStyles","ThemeProvider","Table","TableBody","TableContainer","Paper","TablePagination","useCountry","CountryTableRow","CountryTableHead","getComparator","useDispatch","getCountrySuccess","ThemeContext","darkTheme","lightTheme","useStyles","theme","root","backgroundColor","pallette","background","padding","container","borderRadius","override","table","minWidth","CountryTable","props","currentTheme","switchTheme","allCountries","dispatch","page","setPage","order","setOrder","orderBy","setOrderBy","classes","rowsPerPage","handleChangePage","event","newPage","sort","sortedCountries","slice","map","country","name","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\n\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n//import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useCountry from '../../custom-hooks/useCountry';\nimport CountryTableRow from './CountryTableRow';\nimport CountryTableHead from './CountryTableHead';\nimport getComparator from '../../helperFunctions';\nimport { useDispatch } from 'react-redux';\nimport { getCountrySuccess } from '../../redux/actions';\n\n//Theme related\nimport { ThemeContext } from '../../App'\nimport { darkTheme, lightTheme } from '../../themes'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.pallette.background,\n        padding: \"50px\"\n    },\n\n    container: {\n        borderRadius: \"1rem\",\n        override: \"hidden\",\n        backgroundColor: theme.table,\n    },\n\n    table: {\n        minWidth: 650,\n        backgroundColor: theme.table,\n    }\n}));\n\nfunction CountryTable(props) {\n    const { currentTheme, switchTheme } = useContext(ThemeContext);\n\n    const allCountries = useCountry();\n    const dispatch = useDispatch();\n\n    const [page, setPage] = useState(0);\n    //Ascending or Descending\n    const [order, setOrder] = useState(\"asc\");\n    //Order by name, population or region\n    const [orderBy, setOrderBy] = useState(\"name\");\n\n    const classes = useStyles();\n    const rowsPerPage = 10;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const sort = () => {\n        const sortedCountries = [...allCountries].sort(getComparator(order, orderBy));\n        dispatch(getCountrySuccess(sortedCountries));\n    }\n\n    return (\n        <ThemeProvider theme={currentTheme}>\n            <div className={classes.root}>\n                <TableContainer className={classes.container} component={Paper}>\n                    <Table\n                        className={classes.table}\n                        aria-label=\"simple table\">\n\n                        <CountryTableHead\n                            orderBy={orderBy}\n                            setOrderBy={setOrderBy}\n                            order={order}\n                            setOrder={setOrder}\n                            sort={sort} />\n\n                        <TableBody>\n                            {allCountries\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((country) => (\n                                    <CountryTableRow key={country.name} country={country} />\n                                ))}\n                        </TableBody>\n\n                    </Table>\n                </TableContainer>\n\n                <TablePagination\n                    component=\"div\"\n                    count={allCountries.length}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    rowsPerPage={rowsPerPage}\n                    rowsPerPageOptions={[5]}\n                />\n            </div>\n        </ThemeProvider>\n    )\n}\n\n\nexport default CountryTable;"]},"metadata":{},"sourceType":"module"}