{"ast":null,"code":"// Put effect similar to dispatch in thunk => trigger another action to send data to reducer\nimport { takeEvery, put } from 'redux-saga/effects';\nimport { getCountrySuccess, GET_COUNTRY_SAGA } from '../actions'; // Effects like takeEvery, takeLatest: define when to run the saga (which action type will trigger the saga)\n// Saga have to be triggered. thunk can be called straight away\n\nfunction* getCountry() {\n  yield takeEvery(GET_COUNTRY_SAGA, function* (action) {\n    const name = action.payload;\n    const url = `https://restcountries.eu/rest/v2/${name ? `name/${name}?fullText=true` : \"all\"}`; //@ts-ignore\n\n    const response = yield fetch(url); //@ts-ignore\n\n    const data = yield response.json();\n    yield put(getCountrySuccess(data));\n  });\n}\n\nexport default getCountry;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/redux/saga/sagas.ts"],"names":["takeEvery","put","getCountrySuccess","GET_COUNTRY_SAGA","getCountry","action","name","payload","url","response","fetch","data","json"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,GAApB,QAA+B,oBAA/B;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoE,YAApE,C,CAEA;AACA;;AACA,UAAUC,UAAV,GAAuB;AACnB,QAAMJ,SAAS,CAACG,gBAAD,EAAmB,WAAWE,MAAX,EAAsD;AACpF,UAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;AACA,UAAMC,GAAG,GAAI,oCAAmCF,IAAI,GAAI,QAAOA,IAAK,gBAAhB,GAAkC,KAAM,EAA5F,CAFoF,CAIpF;;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B,CALoF,CAMpF;;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMX,GAAG,CAACC,iBAAiB,CAACS,IAAD,CAAlB,CAAT;AACH,GATc,CAAf;AAUH;;AAED,eAAeP,UAAf","sourcesContent":["// Put effect similar to dispatch in thunk => trigger another action to send data to reducer\nimport { takeEvery, put } from 'redux-saga/effects';\n\nimport { getCountrySuccess, GET_COUNTRY_SAGA, getCountrySaga } from '../actions';\n\n// Effects like takeEvery, takeLatest: define when to run the saga (which action type will trigger the saga)\n// Saga have to be triggered. thunk can be called straight away\nfunction* getCountry() {\n    yield takeEvery(GET_COUNTRY_SAGA, function* (action: ReturnType<typeof getCountrySaga>) {\n        const name = action.payload;\n        const url = `https://restcountries.eu/rest/v2/${name ? `name/${name}?fullText=true` : \"all\"}`;\n\n        //@ts-ignore\n        const response = yield fetch(url);\n        //@ts-ignore\n        const data = yield response.json();\n        yield put(getCountrySuccess(data));\n    })\n}\n\nexport default getCountry;"]},"metadata":{},"sourceType":"module"}