{"ast":null,"code":"var _jsxFileName = \"/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/components/table/CountryTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination'; //import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport useCountry from '../../custom-hooks/useCountry';\nimport CountryTableRow from './CountryTableRow';\nimport CountryTableHead from './CountryTableHead';\nimport getComparator from '../../helperFunctions';\nimport { useDispatch } from 'react-redux';\nimport { getCountrySuccess } from '../../redux/actions';\nimport Navbar from '../../components/navbar/Navbar'; //Theme related\n\nimport { ThemeContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  content: {\n    backgroundColor: theme => theme.palette.background,\n    padding: \"50px\"\n  },\n  container: {\n    borderRadius: \"1rem\",\n    override: \"hidden\",\n    backgroundColor: theme => theme.palette.table\n  },\n  table: {\n    minWidth: 650,\n    backgroundColor: theme => theme.palette.table\n  }\n});\n\nfunction CountryTable() {\n  _s();\n\n  const {\n    currentTheme\n  } = useContext(ThemeContext);\n  const classes = useStyles(currentTheme);\n  const allCountries = useCountry();\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(0); //Ascending or Descending\n\n  const [order, setOrder] = useState(\"asc\"); //Order by name, population or region\n\n  const [orderBy, setOrderBy] = useState(\"name\");\n  const rowsPerPage = 10;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const sort = () => {\n    const sortedCountries = [...allCountries].sort(getComparator(order, orderBy));\n    dispatch(getCountrySuccess(sortedCountries));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(CountryTableHead, {\n            orderBy: orderBy,\n            setOrderBy: setOrderBy,\n            order: order,\n            setOrder: setOrder,\n            sort: sort\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: allCountries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(country => /*#__PURE__*/_jsxDEV(CountryTableRow, {\n              country: country\n            }, country.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        component: \"div\",\n        count: allCountries.length,\n        page: page,\n        onChangePage: handleChangePage,\n        rowsPerPage: rowsPerPage,\n        rowsPerPageOptions: [5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryTable, \"7KlMfRxC2JKS9TM6ib9K/PtT9+M=\", false, function () {\n  return [useStyles, useCountry, useDispatch];\n});\n\n_c = CountryTable;\nexport default CountryTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryTable\");","map":{"version":3,"sources":["/Users/meocuabinh/Documents/Integrify/fs7-finland-react-redux-typescript/src/components/table/CountryTable.tsx"],"names":["React","useState","useContext","makeStyles","Table","TableBody","TableContainer","Paper","TablePagination","useCountry","CountryTableRow","CountryTableHead","getComparator","useDispatch","getCountrySuccess","Navbar","ThemeContext","useStyles","content","backgroundColor","theme","palette","background","padding","container","borderRadius","override","table","minWidth","CountryTable","currentTheme","classes","allCountries","dispatch","page","setPage","order","setOrder","orderBy","setOrderBy","rowsPerPage","handleChangePage","event","newPage","sort","sortedCountries","slice","map","country","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,eAAP,MAA4B,mCAA5B,C,CAEA;;AAGA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,MAAP,MAAmB,gCAAnB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,WAA7B;;AAGA,MAAMC,SAAS,GAAGd,UAAU,CAAC;AAEzBe,EAAAA,OAAO,EAAE;AACLC,IAAAA,eAAe,EAAEC,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,UADnC;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAFgB;AAOzBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,YAAY,EAAE,MADP;AAEPC,IAAAA,QAAQ,EAAE,QAFH;AAGPP,IAAAA,eAAe,EAAEC,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcM;AAHjC,GAPc;AAazBA,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,GADP;AAEHT,IAAAA,eAAe,EAAEC,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcM;AAFrC;AAbkB,CAAD,CAA5B;;AAoBA,SAASE,YAAT,GAAwB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAmB5B,UAAU,CAACc,YAAD,CAAnC;AACA,QAAMe,OAAO,GAAGd,SAAS,CAACa,YAAD,CAAzB;AAEA,QAAME,YAAY,GAAGvB,UAAU,EAA/B;AACA,QAAMwB,QAAQ,GAAGpB,WAAW,EAA5B;AAEA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBlC,QAAQ,CAAC,CAAD,CAAhC,CAPoB,CAQpB;;AACA,QAAM,CAACmC,KAAD,EAAQC,QAAR,IAAoBpC,QAAQ,CAAC,KAAD,CAAlC,CAToB,CAUpB;;AACA,QAAM,CAACqC,OAAD,EAAUC,UAAV,IAAwBtC,QAAQ,CAAmC,MAAnC,CAAtC;AACA,QAAMuC,WAAW,GAAG,EAApB;;AAEA,QAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAA4B;AACjDR,IAAAA,OAAO,CAACQ,OAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,IAAI,GAAG,MAAM;AACf,UAAMC,eAAe,GAAG,CAAC,GAAGb,YAAJ,EAAkBY,IAAlB,CAAuBhC,aAAa,CAACwB,KAAD,EAAQE,OAAR,CAApC,CAAxB;AACAL,IAAAA,QAAQ,CAACnB,iBAAiB,CAAC+B,eAAD,CAAlB,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAEd,OAAO,CAACb,OAAxB;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEa,OAAO,CAACP,SAAnC;AAA8C,QAAA,SAAS,EAAEjB,KAAzD;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,SAAS,EAAEwB,OAAO,CAACJ,KADvB;AAEI,wBAAW,cAFf;AAAA,kCAII,QAAC,gBAAD;AACI,YAAA,OAAO,EAAEW,OADb;AAEI,YAAA,UAAU,EAAEC,UAFhB;AAGI,YAAA,KAAK,EAAEH,KAHX;AAII,YAAA,QAAQ,EAAEC,QAJd;AAKI,YAAA,IAAI,EAAEO;AALV;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAWI,QAAC,SAAD;AAAA,sBACKZ,YAAY,CACRc,KADJ,CACUZ,IAAI,GAAGM,WADjB,EAC8BN,IAAI,GAAGM,WAAP,GAAqBA,WADnD,EAEIO,GAFJ,CAESC,OAAD,iBACD,QAAC,eAAD;AAAoC,cAAA,OAAO,EAAEA;AAA7C,eAAsBA,OAAO,CAACC,IAA9B;AAAA;AAAA;AAAA;AAAA,oBAHP;AADL;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAwBI,QAAC,eAAD;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,KAAK,EAAEjB,YAAY,CAACkB,MAFxB;AAGI,QAAA,IAAI,EAAEhB,IAHV;AAII,QAAA,YAAY,EAAEO,gBAJlB;AAKI,QAAA,WAAW,EAAED,WALjB;AAMI,QAAA,kBAAkB,EAAE,CAAC,CAAD;AANxB;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GA7DQX,Y;UAEWZ,S,EAEKR,U,EACJI,W;;;KALZgB,Y;AAgET,eAAeA,YAAf","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\n\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n//import CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { Country } from '../../types';\nimport useCountry from '../../custom-hooks/useCountry';\nimport CountryTableRow from './CountryTableRow';\nimport CountryTableHead from './CountryTableHead';\nimport getComparator from '../../helperFunctions';\nimport { useDispatch } from 'react-redux';\nimport { getCountrySuccess } from '../../redux/actions';\nimport Navbar from '../../components/navbar/Navbar';\n\n//Theme related\nimport { ThemeContext } from '../../App';\nimport { Theme } from '../../types';\n\nconst useStyles = makeStyles({\n\n    content: {\n        backgroundColor: theme => theme.palette.background,\n        padding: \"50px\"\n    },\n\n    container: {\n        borderRadius: \"1rem\",\n        override: \"hidden\",\n        backgroundColor: theme => theme.palette.table,\n    },\n\n    table: {\n        minWidth: 650,\n        backgroundColor: theme => theme.palette.table,\n    }\n});\n\n\nfunction CountryTable() {\n    const { currentTheme } = useContext(ThemeContext);\n    const classes = useStyles(currentTheme);\n\n    const allCountries = useCountry();\n    const dispatch = useDispatch();\n\n    const [page, setPage] = useState(0);\n    //Ascending or Descending\n    const [order, setOrder] = useState(\"asc\");\n    //Order by name, population or region\n    const [orderBy, setOrderBy] = useState<\"name\" | \"population\" | \"region\">(\"name\");\n    const rowsPerPage = 10;\n\n    const handleChangePage = (event, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const sort = () => {\n        const sortedCountries = [...allCountries].sort(getComparator(order, orderBy));\n        dispatch(getCountrySuccess(sortedCountries));\n    }\n\n    return (\n        <div>\n            <Navbar />\n            <div className={classes.content}>\n                <TableContainer className={classes.container} component={Paper}>\n                    <Table\n                        className={classes.table}\n                        aria-label=\"simple table\">\n\n                        <CountryTableHead\n                            orderBy={orderBy}\n                            setOrderBy={setOrderBy}\n                            order={order}\n                            setOrder={setOrder}\n                            sort={sort} />\n\n                        <TableBody>\n                            {allCountries\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((country: Country) => (\n                                    <CountryTableRow key={country.name} country={country} />\n                                ))}\n                        </TableBody>\n\n                    </Table>\n                </TableContainer>\n\n                <TablePagination\n                    component=\"div\"\n                    count={allCountries.length}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    rowsPerPage={rowsPerPage}\n                    rowsPerPageOptions={[5]}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nexport default CountryTable;"]},"metadata":{},"sourceType":"module"}